name: PR Unit Tests

on:
  pull_request:
    types: [opened, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/gradle-wrapper.properties', '**/*.gradle*', '**/gradle.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Run unit tests
        run: ./gradlew --no-daemon test

      # Optional guard: fail if no test reports were generated (prevents "green with zero tests").
      - name: Verify test reports exist
        run: |
          set -e
          count=$(find . -type f -path '*build/test-results/*/TEST-*.xml' 2>/dev/null | wc -l || true)
          echo "Discovered $count test report files."
          if [ "$count" -eq 0 ]; then
            echo "No test reports found. Failing."
            exit 1
          fi

      - name: Upload test reports (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: |
            **/build/test-results
            **/build/reports/tests
          if-no-files-found: ignore
          retention-days: 7

  comment_and_close_pr:
    needs: test
    # Only run if tests failed and PR is still open
    if: ${{ needs.test.result == 'failure' && github.event.pull_request.state == 'open' }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
    steps:
      - name: Comment and close PR
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const pr = context.payload.pull_request;
            const prNumber = pr.number;

            const body = `
            ‚ùå **Unit tests failed in CI.**
            
            Please run the tests locally (\`./gradlew test\`), fix any failures, and then reopen this PR once everything passes.
            `;

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: prNumber,
              body
            });

            await github.rest.pulls.update({
              owner,
              repo,
              pull_number: prNumber,
              state: "closed"
            });
