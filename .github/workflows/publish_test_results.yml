name: Publish Test Results

on:
  workflow_run:
    workflows: ["PR Unit Tests"]   # must match: name: PR Unit Tests
    types: [completed]

permissions:
  contents: read
  checks: write
  issues: write
  pull-requests: write

jobs:
  publish-and-close:
    runs-on: ubuntu-latest
    # Only react to PR-triggered runs; ignore pushes, etc.
    if: ${{ github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion != 'skipped' }}

    steps:
      - name: Read PR details & fork status
        id: pr
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const prNumber = context.payload.workflow_run.pull_requests?.[0]?.number;
            if (!prNumber) {
              core.info('No PR attached to this workflow_run.');
              core.setOutput('has_pr', 'false');
              return;
            }
            const pr = await github.rest.pulls.get({owner, repo, pull_number: prNumber});
            const isFork = pr.data.head.repo.full_name !== pr.data.base.repo.full_name;

            core.setOutput('has_pr', 'true');
            core.setOutput('pr_number', String(prNumber));
            core.setOutput('is_fork', String(isFork));
            core.setOutput('run_conclusion', context.payload.workflow_run.conclusion);

      - name: Stop if not a fork PR
        if: ${{ steps.pr.outputs.has_pr != 'true' || steps.pr.outputs.is_fork != 'true' }}
        run: echo "Not a fork PR (or no PR). Nothing to do."

      # Download the artifact produced by your main workflow
      - name: Download test-reports artifact
        if: ${{ steps.pr.outputs.has_pr == 'true' && steps.pr.outputs.is_fork == 'true' }}
        uses: dawidd6/action-download-artifact@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_id: ${{ github.event.workflow_run.id }}
          name: test-reports              # matches your main workflow's artifact name
          path: ./artifacts
          if_no_artifact_found: ignore

      # Publish results now that we are running in the base repo context (write perms)
      - name: Publish Unit Test Results (from artifacts)
        if: ${{ steps.pr.outputs.has_pr == 'true' && steps.pr.outputs.is_fork == 'true' }}
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: artifacts/**/TEST-*.xml
          check_name: "Unit Test Results"
          comment_mode: always
          job_summary: true

      # Mirror your same policy: close fork PRs if the main run failed
      - name: Close PR when tests failed (fork PRs)
        if: ${{ steps.pr.outputs.has_pr == 'true' && steps.pr.outputs.is_fork == 'true' && steps.pr.outputs.run_conclusion == 'failure' }}
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo;
            const prNumber = Number("${{ steps.pr.outputs.pr_number }}");

            // Double-check it's still open
            const pr = await github.rest.pulls.get({ owner, repo, pull_number: prNumber });
            if (pr.data.state !== "open") {
              core.info(`PR #${prNumber} is not open, skipping close.`);
              return;
            }

            const body = [
              "‚ùå **CI failed.**",
              "",
              "A detailed test summary has been posted (see Checks / PR comment).",
              "",
              "Please run locally (`./gradlew jvmTest`), push fixes, and then **re-open this PR**."
            ].join("\n");

            await github.rest.issues.createComment({ owner, repo, issue_number: prNumber, body });
            await github.rest.pulls.update({ owner, repo, pull_number: prNumber, state: "closed" });
